/*git 学习命令总结*/
git config --global user.name
git config -- global user.email
git config --global color.ui auto //配置颜色


git init //初始一个版本库
git add <file>//添加文件 添加到缓存区
git commit -m <info>//提交
git status //工作区的状态
git diff <file> //比较文件的不同
git log（--pretty=oneline）//提交日志
git reset --hard HEAD^（或具体版本号）//回退到上个版本
git reflog //记录每次的命令
git checkout -- <file>//没有-就切换分支了 撤回修改文件 在暂存区时git reset HEAD <file>
rm file//删除文件 没有添加到暂存区
git rm file //从版本库中删掉

//远程
ssh-keygen -t rsa -c "email" //获取ssh git bash运行 在用户根目录中

git remote add origin git@"地址":层级/.git仓库
git pull origin master --allow-unrelated-histories //如果没有clone远程 拉去两个独立仓库合并
git push origin master //向远程推送
//分支
git checkout -b branchName //创建分支并切换到分支（git branch name git checkout name） 
git branch //查看分支
git merge//一般切换到master之后合并 删掉分支
git merge --no-ff -m " " name //不使用默认的--fast forward
git branch -d name //合并之后删除分支
